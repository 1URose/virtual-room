{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/equipments/create": {
            "post": {
                "description": "Creates a new equipment entry with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Create a new equipment item",
                "parameters": [
                    {
                        "description": "Equipment details",
                        "name": "equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/equipment_dto.CreateEquipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/equipments/{name}": {
            "get": {
                "description": "Fetches the user who is associated with the specified equipment name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Get user by equipment name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Equipment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/eventParticipants": {
            "post": {
                "description": "Allows a user to join a specific event by becoming its participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event_participants"
                ],
                "summary": "User becomes a participant in an event",
                "parameters": [
                    {
                        "description": "Event participant details",
                        "name": "participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event_participiant_dto.BecomeParticipantDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Allows a user to leave a specific event they are participating in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event_participants"
                ],
                "summary": "User leaves an event",
                "parameters": [
                    {
                        "description": "Event leave details",
                        "name": "leaveEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event_participiant_dto.LeaveEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/eventParticipants/getAllEventsByParticipant": {
            "get": {
                "description": "Fetches all events for a user identified by their participant ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event_participants"
                ],
                "summary": "Get all events by participant ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/eventParticipants/getAllParticipantsByEvent": {
            "post": {
                "description": "Fetches a list of users participating in a specified event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event_participants"
                ],
                "summary": "Get all participants of an event",
                "parameters": [
                    {
                        "description": "Event details",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/events/all": {
            "get": {
                "description": "Retrieves a list of all events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/events/create": {
            "post": {
                "description": "Creates a new event with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create an event",
                "parameters": [
                    {
                        "description": "Event details",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event_dto.CreateEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/events/{name}": {
            "get": {
                "description": "Fetches event details by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get an event by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates details of an existing event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event update details",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an event by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sponsors/all": {
            "get": {
                "description": "Fetches a list of all sponsors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sponsors"
                ],
                "summary": "Get all sponsors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sponsors/create": {
            "post": {
                "description": "Creates a new sponsor with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sponsors"
                ],
                "summary": "Create a sponsor",
                "parameters": [
                    {
                        "description": "Sponsor details",
                        "name": "sponsor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sponsor_dto.CreateSponsor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sponsors/{name}": {
            "get": {
                "description": "Fetches the sponsor details by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sponsors"
                ],
                "summary": "Get sponsor by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sponsor name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the sponsor information such as name, contact, and event association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sponsors"
                ],
                "summary": "Update a sponsor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sponsor name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sponsor updates",
                        "name": "sponsor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sponsors/{sponsorName}": {
            "delete": {
                "description": "Deletes the sponsor specified by the name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sponsors"
                ],
                "summary": "Delete a sponsor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sponsor name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tickets/all": {
            "get": {
                "description": "Возвращает все билеты",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Список билетов",
                "responses": {
                    "200": {
                        "description": "Список билетов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tickets/create": {
            "post": {
                "description": "Создаёт новый билет для события",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Создать билет",
                "parameters": [
                    {
                        "description": "Данные билета",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket_dto.CreateTicket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное создание билета",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tickets/{login}/{event_name}": {
            "get": {
                "description": "Возвращает билет по логину пользователя и названию события",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Получить билет",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "userLogin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название события",
                        "name": "eventName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о билете",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные билета",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Обновить билет",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "userLogin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название события",
                        "name": "eventName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные",
                        "name": "updatedTicket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет билет по логину пользователя и названию события",
                "tags": [
                    "Tickets"
                ],
                "summary": "Удалить билет",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "userLogin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название события",
                        "name": "eventName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/all": {
            "get": {
                "description": "Возвращает список всех зарегистрированных пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Список пользователей",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/auth": {
            "post": {
                "description": "Проверяет учетные данные пользователя и возвращает токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Учетные данные пользователя",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_dto.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен аутентификации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/signUp": {
            "post": {
                "description": "Регистрирует нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_dto.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная регистрация",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{login}": {
            "get": {
                "description": "Возвращает данные пользователя по его логину",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получить пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "login",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные пользователя по его логину",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Обновить пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "login",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет пользователя по его логину",
                "tags": [
                    "Users"
                ],
                "summary": "Удалить пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Логин пользователя",
                        "name": "login",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/virtualRooms/all": {
            "get": {
                "description": "Возвращает список всех виртуальных комнат",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VirtualRooms"
                ],
                "summary": "Список виртуальных комнат",
                "responses": {
                    "200": {
                        "description": "Список виртуальных комнат",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/virtualRooms/create": {
            "post": {
                "description": "Добавляет новую виртуальную комнату в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VirtualRooms"
                ],
                "summary": "Создать виртуальную комнату",
                "parameters": [
                    {
                        "description": "Данные комнаты",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_room_dto.CreateVirtualRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Название комнаты",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/virtualRooms/update/{name}": {
            "put": {
                "description": "Обновляет данные виртуальной комнаты по названию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VirtualRooms"
                ],
                "summary": "Обновить виртуальную комнату",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название комнаты",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлённые данные комнаты",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/virtualRooms/{name}": {
            "get": {
                "description": "Возвращает данные виртуальной комнаты по её названию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VirtualRooms"
                ],
                "summary": "Получить виртуальную комнату",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название комнаты",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о комнате",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет виртуальную комнату по названию",
                "tags": [
                    "VirtualRooms"
                ],
                "summary": "Удалить виртуальную комнату",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название комнаты",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Название удалённой комнаты",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Event": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organizer_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "virtual_room_id": {
                    "type": "integer"
                }
            }
        },
        "entity.TicketType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "TicketTypeFree",
                "TicketTypePaid"
            ]
        },
        "entity.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Admin",
                "Organizer",
                "Participant"
            ]
        },
        "equipment_dto.CreateEquipment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_login": {
                    "type": "string"
                }
            }
        },
        "event_dto.CreateEvent": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "organizer_login": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "virtual_room_name": {
                    "type": "string"
                }
            }
        },
        "event_participiant_dto.BecomeParticipantDto": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/entity.Event"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "event_participiant_dto.LeaveEventDto": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/entity.Event"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "sponsor_dto.CreateSponsor": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string"
                },
                "contribution_amount": {
                    "type": "number"
                },
                "event_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ticket_dto.CreateTicket": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "ticket_type": {
                    "$ref": "#/definitions/entity.TicketType"
                }
            }
        },
        "user_dto.Auth": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user_dto.SignUp": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_role": {
                    "$ref": "#/definitions/entity.UserRole"
                }
            }
        },
        "virtual_room_dto.CreateVirtualRoom": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "room_name": {
                    "type": "string"
                }
            }
        }
    }
}